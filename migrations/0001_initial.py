# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdresseOpi',
            fields=[
                ('cod_ind_opi', models.IntegerField(serialize=False, primary_key=True, db_column='COD_IND_OPI')),
                ('cod_typ_adr_opi', models.CharField(max_length=1, null=True, verbose_name="Type de l'adresse OPI", db_column='COD_TYP_ADR_OPI')),
                ('cod_pay', models.CharField(max_length=3, null=True, verbose_name='Code Pays INSEE', db_column='COD_PAY')),
                ('cod_bdi', models.CharField(max_length=5, null=True, verbose_name='Code Bureau Distributeur', db_column='COD_BDI')),
                ('cod_com', models.CharField(max_length=5, null=True, verbose_name='Code Commune', db_column='COD_COM')),
                ('lib_ad1', models.CharField(max_length=32, null=True, verbose_name='Libell\xe9 adresse 1', db_column='LIB_AD1')),
                ('lib_ad2', models.CharField(max_length=32, null=True, verbose_name='Libell\xe9 adresse 1', db_column='LIB_AD2')),
                ('lib_ad3', models.CharField(max_length=32, null=True, verbose_name='Libell\xe9 adresse 1', db_column='LIB_AD3')),
                ('lib_ade', models.CharField(max_length=32, null=True, verbose_name='Libell\xe9 adresse 1', db_column='LIB_ADE')),
            ],
            options={
                'db_table': 'ADRESSE_OPI',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ComBdiInitial',
            fields=[
                ('cod_bdi', models.CharField(max_length=6, serialize=False, primary_key=True, db_column='COD_BDI')),
                ('cod_com', models.CharField(max_length=6, db_column='COD_COM')),
                ('lib_ach', models.CharField(max_length=26, db_column='LIB_ACH')),
                ('eta_ptc_loc', models.CharField(max_length=3, db_column='ETA_PTC_LOC')),
                ('eta_ptc_ach', models.CharField(max_length=3, db_column='ETA_PTC_ACH')),
                ('tem_en_sve_cbd', models.CharField(max_length=3, db_column='TEM_EN_SVE_CBD')),
                ('cod_fic_cbd', models.CharField(max_length=3, db_column='COD_FIC_CBD')),
            ],
            options={
                'ordering': ['lib_ach'],
                'db_table': 'COM_BDI',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndBac',
            fields=[
                ('cod_ind', models.CharField(max_length=8, serialize=False, verbose_name="code etudiant au sein de l'\xe9tablissement", primary_key=True, db_column='COD_IND')),
                ('cod_bac', models.CharField(max_length=4, null=True, verbose_name='code_baccalaureat ou equivalence', db_column='COD_BAC')),
                ('cod_etb', models.CharField(max_length=8, null=True, verbose_name="code national de l'etablissement de preparation du bac", db_column='COD_ETB')),
                ('cod_tpe', models.CharField(max_length=2, null=True, verbose_name='code type etablissement', db_column='COD_TPE')),
                ('cod_dep', models.CharField(max_length=3, null=True, verbose_name='code departement de preparation du bac', db_column='COD_DEP')),
                ('cod_mnb', models.CharField(max_length=2, null=True, verbose_name='code mention niveau bac obtenue', db_column='COD_MNB')),
                ('daa_obt_bac_iba', models.CharField(max_length=4, null=True, verbose_name="annee de la date d'obtention du bac", db_column='DAA_OBT_BAC_IBA')),
                ('tem_ins_adm', models.CharField(default='O', max_length=1, verbose_name='temoin bac titre acces a universite', db_column='TEM_INS_ADM')),
                ('cod_tpe_opi', models.CharField(max_length=2, null=True, verbose_name="code opi du type de l'etablissement d'obtention du bac", db_column='COD_TPE_OPI')),
            ],
            options={
                'db_table': 'IND_BAC',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndOpi',
            fields=[
                ('cod_ind_opi', models.IntegerField(serialize=False, verbose_name='Code Dossier OPI', primary_key=True, db_column='COD_IND_OPI')),
                ('cod_sim', models.CharField(max_length=1, null=True, verbose_name='Code Situation militaire', db_column='COD_SIM')),
                ('cod_pay_nat', models.CharField(max_length=3, null=True, verbose_name='Code Pays INSEE', db_column='COD_PAY_NAT')),
                ('cod_etb', models.CharField(max_length=8, null=True, verbose_name="Code National de l'Etablissement de premi\xe8re inscription", db_column='COD_ETB')),
                ('cod_ind', models.IntegerField(verbose_name='Code Dossier OPI', db_column='COD_IND')),
                ('cod_nne_ind_opi', models.CharField(max_length=10, null=True, verbose_name='Identifiant National Etudiant', db_column='COD_NNE_IND_OPI')),
                ('cod_cle_nne_ind_opi', models.CharField(max_length=1, null=True, verbose_name="Cle de l'Identifiant National Etudiant", db_column='COD_CLE_NNE_IND_OPI')),
                ('cod_dap', models.CharField(max_length=2, null=True, verbose_name='Code Domaine Activite Professionnelle', db_column='COD_DAP')),
                ('date_nai_ind_opi', models.DateField(verbose_name="Date de naissance de l'individu OPI", db_column='DATE_NAI_IND_OPI')),
                ('tem_date_nai_rel_opi', models.CharField(default='N', max_length=1, verbose_name='T\xe9moin indiquant si la date de naissance estestim\xe9e', db_column='TEM_DATE_NAI_REL_OPI')),
                ('daa_lbt_ind_opi', models.CharField(max_length=4, null=True, verbose_name="Annee de liberation de l'etudiant qui se trouve sous les drapeaux", db_column='DAA_LBT_IND_OPI')),
                ('dmm_lbt_ind_opi', models.CharField(max_length=2, null=True, verbose_name="Mois de liberation de l'etudiant qui se trouve sous les drapeaux", db_column='DMM_LBT_IND_OPI')),
                ('daa_ent_etb_opi', models.CharField(max_length=4, null=True, verbose_name='Annee de premiere inscription dans une universite francaise', db_column='DAA_ENT_ETB_OPI')),
                ('lib_nom_pat_ind_opi', models.CharField(max_length=30, verbose_name='Nom Patronymique Etudiant', db_column='LIB_NOM_PAT_IND_OPI')),
                ('lib_nom_usu_ind_opi', models.CharField(max_length=30, null=True, verbose_name='Nom Usuel Etudiant', db_column='LIB_NOM_USU_IND_OPI')),
                ('lib_pr1_ind_opi', models.CharField(max_length=20, verbose_name='Prenom Premier Etudiant', db_column='LIB_PR1_IND_OPI')),
                ('lib_pr2_ind_opi', models.CharField(max_length=20, null=True, verbose_name="Deuxieme prenom de l'etudiant potentiel", db_column='LIB_PR2_IND_OPI')),
                ('lib_pr3_ind_opi', models.CharField(max_length=20, null=True, verbose_name="Troisieme prenom de l'etudiant potentiel", db_column='LIB_PR3_IND_OPI')),
                ('num_tel_ind_opi', models.CharField(max_length=15, null=True, verbose_name='Numero Telephone Etudiant', db_column='NUM_TEL_IND_OPI')),
                ('cod_etu_opi', models.IntegerField(null=True)),
                ('lib_vil_nai_etu_opi', models.CharField(max_length=30, null=True, verbose_name='Ville Naissance Etudiant', db_column='LIB_VIL_NAI_ETU_OPI')),
                ('cod_opi_int_epo', models.CharField(max_length=10, verbose_name="Code de l'etudiant potentiel dans l'interface amont", db_column='COD_OPI_INT_EPO')),
                ('tem_mi_tps_epo', models.IntegerField(null=True, verbose_name='Proportion du temps partiel', db_column='TEM_MI_TPS_EPO')),
                ('cod_fam', models.CharField(max_length=1, null=True, verbose_name='(COPIED)Code Situation Famille', db_column='COD_FAM')),
                ('cod_pcs', models.CharField(max_length=2, null=True, verbose_name='(COPIED)Code Categorie Socio Professionnelle', db_column='COD_PCS')),
                ('cod_dep_pay_nai', models.CharField(max_length=3, null=True, verbose_name='D\xe9partement ou pays de naissance', db_column='COD_DEP_PAY_NAI')),
                ('cod_typ_dep_pay_nai', models.CharField(max_length=1, null=True, verbose_name='D\xe9partement ou pays de naissance', db_column='COD_TYP_DEP_PAY_NAI')),
                ('daa_ens_sup_opi', models.CharField(max_length=4, null=True, verbose_name="Ann\xe9e de 1er inscription dans l'enseignementsup\xe9rieur", db_column='DAA_ENS_SUP_OPI')),
                ('daa_etb_opi', models.CharField(max_length=4, null=True, verbose_name="Ann\xe9e de 1er inscription dans l'\xe9tablissement", db_column='DAA_ETB_OPI')),
                ('cod_sex_etu_opi', models.CharField(max_length=1, null=True, verbose_name='Code sexe OPI de l \xe9tudiant', db_column='COD_SEX_ETU_OPI')),
                ('cod_thp_opi', models.CharField(max_length=2, null=True, verbose_name='Code Handicap OPI de l \xe9tudiant', db_column='COD_THP_OPI')),
                ('cod_thb_opi', models.CharField(max_length=1, null=True, verbose_name='Type de l h\xe9bergement annuel OPI', db_column='COD_THB_OPI')),
                ('adr_mail_opi', models.CharField(max_length=200, null=True, verbose_name='Adresse mail de l \xe9tudiant', db_column='ADR_MAIL_OPI')),
                ('num_tel_por_opi', models.CharField(max_length=15, null=True, verbose_name='Num\xe9ro de t\xe9l\xe9phone portable de l \xe9tudiant', db_column='NUM_TEL_POR_OPI')),
                ('cod_tpe_ant_iaa', models.CharField(max_length=2, null=True, verbose_name='Code du type du dernier \xe9tablissement fr\xe9quent\xe9 OPI', db_column='COD_TPE_ANT_IAA')),
                ('cod_etb_ant_iaa', models.CharField(max_length=8, null=True, verbose_name='Code du dernier \xe9tablissement fr\xe9quent\xe9 OPI', db_column='COD_ETB_ANT_IAA')),
                ('cod_dep_pay_ant_iaa_opi', models.CharField(max_length=3, null=True, verbose_name='Code D\xe9partement ou Pays du dernier \xe9tablissement fr\xe9quent\xe9 OPI', db_column='COD_DEP_PAY_ANT_IAA_OPI')),
                ('cod_typ_dep_pay_ant_iaa_opi', models.CharField(max_length=1, null=True, verbose_name='Type D\xe9partement ou Pays du dernier \xe9tablissement fr\xe9quent\xe9 OPI', db_column='COD_TYP_DEP_PAY_ANT_IAA_OPI')),
                ('daa_etb_ant_iaa_opi', models.CharField(max_length=9, null=True, verbose_name='Ann\xe9e universitaire du dernier \xe9tablissement fr\xe9quent\xe9 OPI', db_column='DAA_ETB_ANT_IAA_OPI')),
                ('cod_sis_ann_pre_opi', models.CharField(max_length=1, null=True, verbose_name='Code situation SISE ann\xe9e pr\xe9c\xe9dente OPI', db_column='COD_SIS_ANN_PRE_OPI')),
                ('cod_etb_ann_pre_opi', models.CharField(max_length=8, null=True, verbose_name='Code \xe9tablissement de la situation ann\xe9e pr\xe9c\xe9dente OPI', db_column='COD_ETB_ANN_PRE_OPI')),
                ('cod_dep_pay_ann_pre_opi', models.CharField(max_length=3, null=True, verbose_name='Code D\xe9partement ou Pays de la situation de lann\xe9e pr\xe9c\xe9dente OPI', db_column='COD_DEP_PAY_ANN_PRE_OPI')),
                ('cod_typ_dep_pay_ann_pre_opi', models.CharField(max_length=1, null=True, verbose_name='Type D\xe9partement ou Pays de la situation de l ann\xe9e pr\xe9c\xe9dente OPI', db_column='COD_TYP_DEP_PAY_ANN_PRE_OPI')),
                ('cod_tds_opi', models.CharField(max_length=1, null=True, verbose_name='Code type dipl\xf4me SISE du dernier dipl\xf4me obtenu', db_column='COD_TDS_OPI')),
                ('cod_etb_der_dip', models.CharField(max_length=8, null=True, verbose_name='Code \xe9tablissement o\xf9 le dernier dipl\xf4me a \xe9t\xe9 obtenu', db_column='COD_ETB_DER_DIP')),
                ('daa_etb_der_dip', models.CharField(max_length=9, null=True, verbose_name='Ann\xe9e universitaire o\xf9 le dernier dipl\xf4me a \xe9t\xe9 obtenu', db_column='DAA_ETB_DER_DIP')),
                ('cod_tpe_ann_crt', models.CharField(max_length=2, null=True, verbose_name='Code du type de l autre \xe9tablissement fr\xe9quent\xe9 pour l ann\xe9e en cours OPI', db_column='COD_TPE_ANN_CRT')),
                ('cod_etb_ann_crt', models.CharField(max_length=8, null=True, verbose_name='Code de l autre \xe9tablissement fr\xe9quent\xe9 pour l ann\xe9e en cours OPI', db_column='COD_ETB_ANN_CRT')),
                ('daa_etr_sup', models.CharField(max_length=9, null=True, verbose_name='T\xe9moin d inscription parall\xe8le dans l autre \xe9tablissement pour l ann\xe9e en cours', db_column='DAA_ETR_SUP')),
                ('cod_tde_der_dip', models.CharField(max_length=3, null=True, verbose_name='Code du type de dernier diplome', db_column='COD_TDE_DER_DIP')),
                ('cod_dep_pay_der_dip', models.CharField(max_length=3, null=True, verbose_name='Code pays ou departement du dernier diplome obtenu', db_column='COD_DEP_PAY_DER_DIP')),
                ('cod_typ_dep_pay_der_dip', models.CharField(max_length=1, null=True, verbose_name='Code du type du pays ou departement du dernier diplome obtenu', db_column='COD_TYP_DEP_PAY_DER_DIP')),
                ('nb_enf_etu_opi', models.IntegerField(null=True, verbose_name="Nombre d'enfant de l'\xe9tudiant", db_column='NB_ENF_ETU_OPI')),
                ('cod_pcs_ap', models.CharField(default='99', max_length=2, null=True, verbose_name='Code categorie socio-professionnelle autre parent', db_column='COD_PCS_AP')),
                ('cod_rgi', models.CharField(default='1', max_length=1, verbose_name='code regime', db_column='COD_RGI')),
                ('cod_stu', models.CharField(default='01', max_length=2, verbose_name='code_etu', db_column='COD_STU')),
            ],
            options={
                'db_table': 'IND_OPI',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OpiBac',
            fields=[
                ('cod_ind_opi', models.IntegerField(serialize=False, primary_key=True, db_column='COD_IND_OPI')),
                ('cod_bac', models.CharField(max_length=4, null=True, verbose_name='(COPIED)Code Baccalaureat ou Equivalence', db_column='COD_BAC')),
                ('cod_etb', models.CharField(max_length=8, null=True, verbose_name="(COPIED)Code National de l'Etablissement", db_column='COD_ETB')),
                ('cod_tpe', models.CharField(max_length=2, null=True, verbose_name='(COPIED)Code Type Etablissement', db_column='COD_TPE')),
                ('cod_dep', models.CharField(max_length=3, null=True, verbose_name='COPIED)Code Departement', db_column='COD_DEP')),
                ('cod_mnb', models.CharField(max_length=2, null=True, verbose_name='(COPIED)Code Mention Niveau Bac', db_column='COD_MNB')),
                ('daa_obt_bac_oba', models.CharField(max_length=4, null=True, verbose_name="Annee de la date d'obtention du bac", db_column='DAA_OBT_BAC_OBA')),
            ],
            options={
                'db_table': 'OPI_BAC',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VdiFractionnerVetInitial',
            fields=[
                ('cod_etp', models.CharField(max_length=6, serialize=False, verbose_name='code etape', primary_key=True, db_column='COD_ETP')),
                ('cod_vrs_vet', models.CharField(max_length=3, verbose_name='version etape', db_column='COD_VRS_VET')),
                ('cod_dip', models.CharField(max_length=7, verbose_name='code diplome', db_column='COD_DIP')),
                ('cod_vrs_vdi', models.CharField(max_length=3, verbose_name='version diplome', db_column='COD_VRS_VDI')),
                ('cod_sis_daa_min', models.CharField(max_length=2, null=True, verbose_name="Equivalent Annee Minimale de l'Etape pour un Diplome", db_column='COD_SIS_DAA_MIN')),
            ],
            options={
                'db_table': 'VDI_FRACTIONNER_VET',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VersionEtapeInitial',
            fields=[
                ('cod_etp', models.CharField(max_length=6, serialize=False, verbose_name='code etape', primary_key=True, db_column='COD_ETP')),
                ('cod_vrs_vet', models.CharField(max_length=3, verbose_name='version etape', db_column='COD_VRS_VET')),
            ],
            options={
                'db_table': 'VERSION_ETAPE',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Adresse',
            fields=[
                ('cod_adr', models.IntegerField(serialize=False, verbose_name='Code adresse', primary_key=True, db_column='COD_ADR')),
                ('cod_anu_ina', models.CharField(max_length=4, null=True, verbose_name='Code Annee Universitaire pour adresse', db_column='COD_ANU_INA')),
                ('cod_bdi', models.CharField(max_length=5, null=True, verbose_name='Code Bureau Distributeur', db_column='COD_BDI')),
                ('cod_com', models.CharField(max_length=5, null=True, verbose_name='Code Commune', db_column='COD_COM')),
                ('lib_ad1', models.CharField(max_length=32, null=True, verbose_name='Libell\xe9 adresse 1', db_column='LIB_AD1')),
                ('lib_ad2', models.CharField(max_length=32, null=True, verbose_name='Libell\xe9 adresse 2', db_column='LIB_AD2')),
                ('lib_ad3', models.CharField(max_length=32, null=True, verbose_name='Libell\xe9 adresse 3', db_column='LIB_AD3')),
                ('lib_ade', models.CharField(max_length=32, null=True, verbose_name='Libell\xe9 adresse \xe9trang\xe8re', db_column='LIB_ADE')),
                ('num_tel', models.CharField(max_length=15, null=True, verbose_name='Num\xe9ro de t\xe9l\xe9phone', db_column='NUM_TEL')),
                ('num_tel_port', models.CharField(max_length=15, null=True, verbose_name="Num\xe9ro de t\xe9l\xe9phone portable de l'\xe9tudiant", db_column='NUM_TEL_PORT')),
                ('adr_mail', models.CharField(max_length=200, null=True, verbose_name="Adresse Mail personnelle de l'\xe9tudiant", db_column='ADR_MAIL')),
            ],
            options={
                'db_table': 'ADRESSE',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AnneeUni',
            fields=[
                ('cod_anu', models.CharField(max_length=4, serialize=False, verbose_name='Ann\xe9e', primary_key=True, db_column='COD_ANU')),
                ('eta_anu_iae', models.CharField(default='I', max_length=1, verbose_name='Etat ouverture ann\xe9e', db_column='ETA_ANU_IAE', choices=[('F', 'Ferm\xe9'), ('I', 'Inscription'), ('O', 'Ouvert')])),
            ],
            options={
                'ordering': ['-cod_anu'],
                'db_table': 'ANNEE_UNI',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BacOuxEqu',
            fields=[
                ('cod_bac', models.CharField(max_length=4, serialize=False, verbose_name='Code Baccalaureat ou Equivalence', primary_key=True, db_column='COD_BAC')),
                ('cod_sis_bac', models.CharField(max_length=4, verbose_name='Code SISE Baccalaureat ou Equivalence', db_column='COD_SIS_BAC')),
                ('lib_bac', models.CharField(max_length=80, verbose_name='Libelle Long Baccalaureat ou Equivalence', db_column='LIB_BAC')),
                ('lic_bac', models.CharField(max_length=20, verbose_name='Libelle Court Baccalaureat ou Equivalence', db_column='LIC_BAC')),
                ('tem_etb', models.CharField(default='O', max_length=1, verbose_name="Temoin Existence ou Suivi Etablissementd'Origine", db_column='TEM_ETB', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_mnb', models.CharField(default='O', max_length=1, verbose_name='Temoin Existence ou Suivi Mention Niveau Bac Obtenue', db_column='TEM_MNB', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_nat_bac', models.CharField(default='O', max_length=1, verbose_name='Temoin Nature de Bac', db_column='TEM_NAT_BAC', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_obt_tit_etb_sec', models.CharField(default='O', max_length=1, verbose_name='Temoin Preparation Bac Etablissement Secondaire', db_column='TEM_OBT_TIT_ETB_SEC', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_en_sve_bac', models.CharField(default='O', max_length=1, verbose_name='Temoin en Service', db_column='TEM_EN_SVE_BAC', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_deb', models.CharField(default='O', max_length=1, verbose_name='Temoin Departement du Bac', db_column='TEM_DEB', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_del', models.CharField(default='O', max_length=1, verbose_name="Temoin d'Autorisation de Mise Hors Service", db_column='TEM_DEL', choices=[('O', 'O'), ('N', 'N')])),
                ('daa_deb_vld_bac', models.CharField(max_length=4, null=True, verbose_name='Annee de debut de periode de validite du baccalaureat', db_column='DAA_DEB_VLD_BAC')),
                ('daa_fin_vld_bac', models.CharField(max_length=4, null=True, verbose_name='Annee de fin de periode de validite du baccalaureat', db_column='DAA_FIN_VLD_BAC')),
                ('tem_type_equi', models.CharField(default='N', max_length=1, verbose_name='Temoin precisant si la serie de bac est une equivalence', db_column='TEM_TYPE_EQUI', choices=[('O', 'O'), ('N', 'N')])),
                ('cod_tds', models.CharField(max_length=1, null=True, verbose_name='Code du type de dernier diplome obtenu unique', db_column='COD_TDS')),
            ],
            options={
                'db_table': 'BAC_OUX_EQU',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Bourse',
            fields=[
                ('cod_brs', models.CharField(max_length=2, serialize=False, verbose_name='code situation sociale', primary_key=True, db_column='COD_BRS')),
                ('lim1_brs', models.CharField(max_length=35, verbose_name='libelle long', db_column='LIM1_BRS')),
            ],
            options={
                'db_table': 'BOURSE',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CatSocPfl',
            fields=[
                ('cod_pcs', models.CharField(max_length=2, serialize=False, verbose_name='code', primary_key=True, db_column='COD_PCS')),
                ('lib_pcs', models.CharField(max_length=50, verbose_name='libelle long', db_column='LIB_PCS')),
                ('tem_en_sve_pcs', models.CharField(default='O', max_length=1, verbose_name='temoin en service', db_column='TEM_EN_SVE_PCS', choices=[('O', 'O'), ('N', 'N')])),
                ('lib_web_pcs', models.CharField(max_length=120, verbose_name='libelle long', db_column='LIB_WEB_PCS')),
                ('tem_sai_qtr', models.CharField(default='O', max_length=1, verbose_name='temoin en service', db_column='TEM_SAI_QTR', choices=[('O', 'O'), ('N', 'N')])),
            ],
            options={
                'db_table': 'CAT_SOC_PFL',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CentreGestion',
            fields=[
                ('cod_cge', models.CharField(max_length=3, serialize=False, verbose_name='code centre de gestion', primary_key=True, db_column='COD_CGE')),
                ('lib_cge', models.CharField(max_length=40, null=True, verbose_name='libell\xe9', db_column='LIB_CGE')),
            ],
            options={
                'db_table': 'CENTRE_GESTION',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CmpHabiliterVdi',
            fields=[
                ('id', models.CharField(max_length=17, serialize=False, primary_key=True)),
                ('cod_vrs_vdi', models.CharField(max_length=3, verbose_name='numero version diplome', db_column='COD_VRS_VDI')),
                ('tem_en_sve_cvd', models.CharField(max_length=1, null=True, verbose_name='temoin en service', db_column='TEM_EN_SVE_CVD')),
            ],
            options={
                'db_table': 'CMP_HABILITER_COPY',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ComBdi',
            fields=[
                ('id', models.CharField(max_length=13, serialize=False, primary_key=True)),
                ('cod_bdi', models.CharField(max_length=6, db_column='COD_BDI')),
                ('cod_com', models.CharField(max_length=6, db_column='COD_COM')),
                ('lib_ach', models.CharField(max_length=26, db_column='LIB_ACH')),
                ('eta_ptc_loc', models.CharField(max_length=3, db_column='ETA_PTC_LOC')),
                ('eta_ptc_ach', models.CharField(max_length=3, db_column='ETA_PTC_ACH')),
                ('tem_en_sve_cbd', models.CharField(max_length=3, db_column='TEM_EN_SVE_CBD')),
                ('cod_fic_cbd', models.CharField(max_length=3, db_column='COD_FIC_CBD')),
            ],
            options={
                'ordering': ['lib_ach'],
                'db_table': 'COM_BDI_COPY',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Composante',
            fields=[
                ('cod_cmp', models.CharField(max_length=3, serialize=False, verbose_name='code composante', primary_key=True, db_column='COD_CMP')),
                ('cod_tpc', models.CharField(max_length=3, null=True, verbose_name='code type composante', db_column='COD_TPC')),
                ('lib_cmp', models.CharField(max_length=40, null=True, verbose_name='libelle', db_column='LIB_CMP')),
            ],
            options={
                'db_table': 'COMPOSANTE',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CmpHabiliterVdiInitial',
            fields=[
                ('cod_cmp', models.ForeignKey(primary_key=True, db_column='COD_CMP', serialize=False, to='django_apogee.Composante')),
                ('cod_vrs_vdi', models.CharField(max_length=3, verbose_name='numero version diplome', db_column='COD_VRS_VDI')),
                ('tem_en_sve_cvd', models.CharField(max_length=1, verbose_name='temoin en service', db_column='TEM_EN_SVE_CVD')),
            ],
            options={
                'db_table': 'CMP_HABILITER_VDI',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ConfAnneeUni',
            fields=[
                ('anneeuni_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='django_apogee.AnneeUni')),
                ('inscription', models.BooleanField(default=False)),
                ('synchro', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Setting ann\xe9e universitaire',
                'verbose_name_plural': 'Settings ann\xe9e universitaire',
            },
            bases=('django_apogee.anneeuni',),
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('cod_dep', models.CharField(max_length=3, serialize=False, primary_key=True, db_column='COD_DEP')),
                ('cod_acd', models.IntegerField(db_column='COD_ACD')),
                ('lib_dep', models.CharField(max_length=60, db_column='LIB_DEP')),
                ('lic_dep', models.CharField(max_length=20, db_column='LIC_DEP')),
                ('tem_en_sve_dep', models.CharField(max_length=1, db_column='TEM_EN_SVE_DEP')),
            ],
            options={
                'ordering': ['lib_dep'],
                'db_table': 'DEPARTEMENT',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Diplome',
            fields=[
                ('cod_dip', models.CharField(max_length=7, serialize=False, verbose_name='Code diplome', primary_key=True, db_column='COD_DIP')),
                ('lib_dip', models.CharField(max_length=60, verbose_name='libelle diplome', db_column='LIB_DIP')),
            ],
            options={
                'db_table': 'DIPLOME',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VersionDiplomeInitial',
            fields=[
                ('cod_dip', models.ForeignKey(primary_key=True, db_column='COD_DIP', serialize=False, to='django_apogee.Diplome', max_length=7, verbose_name='code diplome')),
                ('cod_vrs_vdi', models.CharField(max_length=3, verbose_name='version diplome', db_column='COD_VRS_VDI')),
                ('lic_vdi', models.CharField(max_length=25, verbose_name='libelle', db_column='LIC_VDI')),
            ],
            options={
                'db_table': 'VERSION_DIPLOME',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DomaineActPfl',
            fields=[
                ('cod_dap', models.CharField(max_length=2, serialize=False, primary_key=True, db_column='COD_DAP')),
                ('lib_web_dap', models.CharField(max_length=120, null=True, db_column='LIB_WEB_DAP')),
            ],
            options={
                'db_table': 'DOMAINE_ACT_PFL',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Elp',
            fields=[
                ('cod_elp', models.CharField(max_length=8, serialize=False, verbose_name='Code element pedagogique', primary_key=True, db_column='COD_ELP')),
                ('lib_elp', models.CharField(max_length=120, verbose_name='libelle')),
                ('eta_elp', models.CharField(max_length=1, verbose_name='etat', db_column='ETA_ELP')),
            ],
            options={
                'db_table': 'ELEMENT_PEDAGOGI',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ElpLibelle',
            fields=[
                ('id', models.CharField(max_length=13, serialize=False, primary_key=True)),
                ('cod_lng', models.CharField(max_length=4, null=True, verbose_name='Code langue', db_column='COD_LNG')),
                ('lib_elp_lng', models.CharField(max_length=4000, null=True, verbose_name='libelle', db_column='LIB_ELP_LNG')),
            ],
            options={
                'db_table': 'ELP_LIBELLE_COPY',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ElpLibelleInitial',
            fields=[
                ('cod_elp', models.ForeignKey(primary_key=True, db_column='COD_ELP', serialize=False, to='django_apogee.Elp')),
                ('cod_lng', models.CharField(max_length=4, verbose_name='Code langue', db_column='COD_LNG')),
                ('lib_elp_lng', models.CharField(max_length=4000, null=True, verbose_name='libelle', db_column='LIB_ELP_LNG')),
            ],
            options={
                'db_table': 'ELP_LIBELLE',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('cod_etb', models.CharField(max_length=8, serialize=False, verbose_name='code', primary_key=True, db_column='COD_ETB')),
                ('lib_etb', models.CharField(max_length=50, verbose_name='libelle long', db_column='LIB_ETB')),
                ('cod_pos_adr_etb', models.CharField(default=None, max_length=20, null=True, verbose_name='Code postal', db_column='COD_POS_ADR_ETB')),
                ('tem_en_sve_etb', models.CharField(default='O', max_length=1, verbose_name='temoin en service', db_column='TEM_EN_SVE_ETB', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_aut_sis_etb', models.CharField(default='O', max_length=1, verbose_name='temoin en service', db_column='TEM_AUT_SIS_ETB', choices=[('O', 'O'), ('N', 'N')])),
                ('cod_aff_dep_etb', models.CharField(max_length=3, null=True, verbose_name='code', db_column='COD_AFF_DEP_ETB')),
                ('cod_aff_etb', models.CharField(max_length=3, null=True, verbose_name='code', db_column='COD_AFF_ETB')),
                ('lib_off_etb', models.CharField(max_length=60, verbose_name='libelle officiel', db_column='LIB_OFF_ETB')),
                ('lib_art_off_etb', models.CharField(max_length=5, verbose_name='article defini precedant le nom officiel', db_column='LIB_ART_OFF_ETB')),
                ('cod_dep', models.ForeignKey(to='django_apogee.Departement', db_column='COD_DEP')),
            ],
            options={
                'ordering': ['lib_etb'],
                'db_table': 'ETABLISSEMENT',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Etape',
            fields=[
                ('cod_etp', models.CharField(max_length=6, serialize=False, verbose_name='Code etape', primary_key=True, db_column='COD_ETP')),
                ('cod_cyc', models.CharField(max_length=1, null=True, verbose_name='code sise', db_column='COD_CYC')),
                ('cod_cur', models.CharField(max_length=1, null=True, verbose_name='cursus lmd', db_column='COD_CUR')),
                ('lib_etp', models.CharField(max_length=60, null=True, verbose_name='label', db_column='LIB_ETP')),
            ],
            options={
                'db_table': 'ETAPE',
                'verbose_name': "Etape d'un cursus",
                'verbose_name_plural': "Etapes d'un cursus",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EtpGererCge',
            fields=[
                ('cod_etp', models.ForeignKey(primary_key=True, db_column='COD_ETP', serialize=False, to='django_apogee.Etape', verbose_name='code etape')),
                ('cod_cge', models.ForeignKey(related_name='etape_centre_gestion', db_column='COD_CGE', verbose_name='code centre gestion', to='django_apogee.CentreGestion')),
                ('cod_cmp', models.ForeignKey(db_column='COD_CMP', verbose_name='code composante', to='django_apogee.Composante')),
            ],
            options={
                'db_table': 'ETP_GERER_CGE',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Individu',
            fields=[
                ('cod_ind', models.IntegerField(serialize=False, verbose_name="Code Etudiant au sein de l'Etablissement", primary_key=True, db_column='COD_IND')),
                ('cod_thp', models.CharField(max_length=2, null=True, verbose_name='code type handicap', db_column='COD_THP')),
                ('cod_fam', models.CharField(max_length=1, null=True, verbose_name='code situation familiale', db_column='COD_FAM')),
                ('cod_sim', models.CharField(max_length=1, null=True, verbose_name='code situation militaire', db_column='COD_SIM')),
                ('cod_pay_nat', models.CharField(max_length=3, null=True, verbose_name='code pays insee nationalie', db_column='COD_PAY_NAT')),
                ('cod_etb', models.CharField(max_length=8, null=True, verbose_name="code notional de l'etablissement premiere inscription", db_column='COD_ETB')),
                ('cod_uti', models.CharField(max_length=30, null=True, verbose_name="code utilisateur de creation de l'individu", db_column='COD_UTI')),
                ('cod_ind_opi', models.IntegerField(null=True, verbose_name='cod_opi', db_column='COD_IND_OPI')),
                ('cod_nne_ind', models.CharField(max_length=10, null=True, verbose_name="Identifiant National de l'\xe9tudiant", db_column='COD_NNE_IND')),
                ('cod_cle_nne_ind', models.CharField(max_length=1, null=True, verbose_name="Cle de l'identifiant national etudiant", db_column='COD_CLE_NNE_IND')),
                ('dat_cre_ind', models.DateTimeField(null=True, verbose_name="Date de cr\xe9ation de l'individu", db_column='DAT_CRE_IND')),
                ('dat_mod_ind', models.DateTimeField(null=True, verbose_name="Date de modification de l'individu", db_column='DAT_MOD_IND')),
                ('date_nai_ind', models.DateTimeField(null=True, verbose_name="Date de naissance de l'individu", db_column='DATE_NAI_IND')),
                ('tem_date_nai_rel', models.CharField(default='O', max_length=1, null=True, verbose_name='temoin date estime', db_column='TEM_DATE_NAI_REL')),
                ('daa_lbt_ind', models.CharField(max_length=4, null=True, verbose_name='annee liberation etudiant sous les drapaux', db_column='DAA_LBT_IND')),
                ('dmm_lbt_ind', models.CharField(max_length=2, null=True, verbose_name='mois de liberation etudiant sous les drapaux', db_column='DMM_LBT_IND')),
                ('daa_ent_etb', models.CharField(max_length=4, null=True, verbose_name='annee premiere inscription universite francaise', db_column='DAA_ENT_ETB')),
                ('lib_nom_pat_ind', models.CharField(max_length=30, null=True, verbose_name='Nom Patronymique Etudiant', db_column='LIB_NOM_PAT_IND')),
                ('lib_nom_usu_ind', models.CharField(max_length=30, null=True, verbose_name='Nom Usuel Etudiant', db_column='LIB_NOM_USU_IND')),
                ('lib_pr1_ind', models.CharField(max_length=20, null=True, verbose_name="Prenom 1 de l'Etudiant", db_column='LIB_PR1_IND')),
                ('lib_pr2_ind', models.CharField(max_length=20, null=True, verbose_name="Prenom 2 de l'Etudiant", db_column='LIB_PR2_IND')),
                ('lib_pr3_ind', models.CharField(max_length=20, null=True, verbose_name="Prenom 3 de l'Etudiant", db_column='LIB_PR3_IND')),
                ('cod_etu', models.IntegerField(null=True, verbose_name='Code Etudiant', db_column='COD_ETU')),
                ('cod_sex_etu', models.CharField(max_length=1, null=True, verbose_name="Code Sexe de l'Etudiant", db_column='COD_SEX_ETU')),
                ('daa_ens_sup', models.CharField(max_length=4, null=True, verbose_name="annee de 1er inscription dans l'etablissement superieur", db_column='DAA_ENS_SUP')),
                ('daa_etb', models.CharField(max_length=4, null=True, verbose_name="annee de 1er inscription dans l'etablisseement", db_column='DAA_ETB')),
            ],
            options={
                'db_table': 'INDIVIDU',
                'verbose_name': '\xe9tudiant',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='InsAdmEtpInitial',
            fields=[
                ('cod_ind', models.ForeignKey(related_name='etapes', primary_key=True, db_column='COD_IND', serialize=False, to='django_apogee.Individu')),
                ('cod_etp', models.CharField(max_length=6, null=True, verbose_name='(COPIED)(COPIED)Code Etape', db_column='COD_ETP')),
                ('cod_vrs_vet', models.CharField(max_length=3, null=True, verbose_name='(COPIED)Numero Version Etape', db_column='COD_VRS_VET')),
                ('num_occ_iae', models.CharField(max_length=2, null=True, verbose_name='', db_column='NUM_OCC_IAE')),
                ('cod_dip', models.CharField(max_length=7, null=True, verbose_name='(COPIED)Code Diplome Etablissement', db_column='COD_DIP')),
                ('cod_cge', models.CharField(max_length=3, null=True, verbose_name='(COPIED)Code Centre de Gestion', db_column='COD_CGE')),
                ('dat_cre_iae', models.DateTimeField(null=True, verbose_name="Date de cr\xe9ation de l'IAE", db_column='DAT_CRE_IAE')),
                ('dat_mod_iae', models.DateTimeField(null=True, verbose_name="Date de modification de l'IAE", db_column='DAT_MOD_IAE')),
                ('nbr_ins_cyc', models.IntegerField(null=True, verbose_name="Nombre d'Inscriptions dans le Cycle", db_column='NBR_INS_CYC')),
                ('nbr_ins_etp', models.IntegerField(null=True, verbose_name="Nombre d'Inscriptions dans l'Etape", db_column='NBR_INS_ETP')),
                ('dat_annul_res_iae', models.DateTimeField(null=True, verbose_name='Date annulation ou r\xe9siliation IA', db_column='DAT_ANNUL_RES_IAE')),
                ('tem_iae_prm', models.CharField(max_length=1, null=True, verbose_name='Temoin Etape Premiere ou Seconde', db_column='TEM_IAE_PRM')),
                ('nbr_ins_dip', models.IntegerField(null=True, verbose_name="Nombre d'Inscriptions dans le DIP", db_column='NBR_INS_DIP')),
                ('eta_iae', models.CharField(max_length=1, null=True, verbose_name="etat de l'inscription", db_column='ETA_IAE')),
                ('eta_pmt_iae', models.CharField(max_length=1, null=True, verbose_name='Etat des paiements des droits', db_column='ETA_PMT_IAE')),
                ('cod_pru', models.CharField(max_length=2, null=True, verbose_name='Code profil \xe9tudiant', db_column='COD_PRU')),
                ('cod_vrs_vdi', models.CharField(max_length=3, null=True, verbose_name='(COPIED)Numero de Version Diplome', db_column='COD_VRS_VDI')),
            ],
            options={
                'db_table': 'INS_ADM_ETP',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='InsAdmAnu',
            fields=[
                ('cod_anu', models.CharField(max_length=4, serialize=False, verbose_name='Code Annee Universitaire', primary_key=True, db_column='COD_ANU')),
                ('cod_rgi', models.CharField(max_length=1, null=True, verbose_name='Code r\xe9gime inscription', db_column='COD_RGI')),
                ('cod_stu', models.CharField(max_length=2, null=True, verbose_name="Statut de l'\xe9tudiant", db_column='COD_STU')),
                ('cod_tpe_ant', models.CharField(max_length=2, null=True, verbose_name='code type etablissement anterieur', db_column='COD_TPE_ANT')),
                ('cod_etb_ant', models.CharField(max_length=8, null=True, verbose_name="code national de l'etalblisement anterieur", db_column='COD_ETB_ANT')),
                ('cod_dep_ant', models.CharField(max_length=3, null=True, verbose_name='code departement etabliessement anterieur', db_column='COD_DEP_ANT')),
                ('cod_pay_ant', models.CharField(max_length=3, null=True, verbose_name='code pays etablissement anterieur', db_column='COD_PAY_ANT')),
                ('daa_etb_ant_iaa', models.CharField(max_length=4, null=True, verbose_name='annee du dernier etablissement frequente', db_column='DAA_ETB_ANT_IAA')),
                ('cod_sis_ann_pre', models.CharField(max_length=1, null=True, verbose_name='code situation sise annee precedente', db_column='COD_SIS_ANN_PRE')),
                ('cod_etb_ann_pre', models.CharField(max_length=8, null=True, verbose_name="code national de l'etablissement de l'anne precedente", db_column='COD_ETB_ANN_PRE')),
                ('cod_dep_ann_pre', models.CharField(max_length=3, null=True, verbose_name='code d\xe9partement annee precedente', db_column='COD_DEP_ANN_PRE')),
                ('cod_tds_ann_pre', models.CharField(max_length=1, null=True, verbose_name='code type diplome sise annee precedente', db_column='COD_TDS_ANN_PRE')),
                ('cod_dep_pay_der_dpl', models.CharField(max_length=3, null=True, verbose_name='code departement pays dernier diplom', db_column='COD_DEP_PAY_DER_DPL')),
                ('cod_typ_dep_pay_der_dpl', models.CharField(max_length=1, null=True, verbose_name='code type departement ou pays denier diplome obtenue', db_column='COD_TYP_DEP_PAY_DER_DPL')),
                ('daa_etb_der_dpl', models.CharField(max_length=4, null=True, verbose_name='date obtention dernier diplome', db_column='DAA_ETB_DER_DPL')),
                ('cod_tde_der_dpl', models.CharField(max_length=3, null=True, verbose_name='code type diplome externe dernier diplome obtenu', db_column='COD_TDE_DER_DPL')),
                ('cod_etb_der_dpl', models.CharField(max_length=8, null=True, verbose_name='code etablissement dernier diplome', db_column='COD_ETB_DER_DPL')),
                ('cod_ind', models.ForeignKey(related_name='inscription_annuelle', db_column='COD_IND', to='django_apogee.Individu')),
            ],
            options={
                'db_table': 'INS_ADM_ANU',
                'verbose_name': "Etape annuelle d'un \xe9tudiant",
                'verbose_name_plural': 'Etapes annuelles des \xe9tudiants',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='InsAdmEtp',
            fields=[
                ('id', models.CharField(max_length=30, serialize=False, primary_key=True)),
                ('cod_etp', models.CharField(max_length=8, null=True, verbose_name='Code Etape', db_column='COD_ETP')),
                ('cod_vrs_vet', models.CharField(max_length=3, verbose_name='(COPIED)Numero Version Etape', db_column='COD_VRS_VET')),
                ('num_occ_iae', models.CharField(max_length=2, null=True, verbose_name="Numero d'Occurrence Version Etape Choisie", db_column='NUM_OCC_IAE')),
                ('cod_dip', models.CharField(max_length=7, null=True, verbose_name='(COPIED)Code Diplome Etablissement', db_column='COD_DIP')),
                ('cod_vrs_vdi', models.CharField(max_length=3, null=True, verbose_name='(COPIED)Numero de Version Diplome', db_column='COD_VRS_VDI')),
                ('cod_cge', models.CharField(max_length=3, null=True, verbose_name='Code Centre de Gestion', db_column='COD_CGE')),
                ('dat_cre_iae', models.DateTimeField(null=True, verbose_name="Date de cr\xe9ation de l'IAE", db_column='DAT_CRE_IAE')),
                ('dat_mod_iae', models.DateTimeField(null=True, verbose_name="Date de modification de l'IAE", db_column='DAT_MOD_IAE')),
                ('nbr_ins_cyc', models.IntegerField(null=True, verbose_name="Nombre d'Inscriptions dans le Cycle", db_column='NBR_INS_CYC')),
                ('nbr_ins_etp', models.IntegerField(null=True, verbose_name="Nombre d'Inscriptions dans l'Etape", db_column='NBR_INS_ETP')),
                ('dat_annul_res_iae', models.DateTimeField(null=True, verbose_name='Date annulation ou r\xe9siliation IA', db_column='DAT_ANNUL_RES_IAE')),
                ('tem_iae_prm', models.CharField(max_length=1, null=True, verbose_name='Temoin Etape Premiere ou Seconde', db_column='TEM_IAE_PRM')),
                ('nbr_ins_dip', models.IntegerField(null=True, verbose_name="Nombre d'Inscriptions dans le Diplome", db_column='NBR_INS_DIP')),
                ('eta_iae', models.CharField(max_length=1, null=True, verbose_name="etat de l'inscription", db_column='ETA_IAE')),
                ('eta_pmt_iae', models.CharField(max_length=1, null=True, verbose_name='Etat des paiements des droits', db_column='ETA_PMT_IAE')),
                ('cod_pru', models.CharField(max_length=2, null=True, verbose_name='Code profil \xe9tudiant', db_column='COD_PRU')),
                ('force_encaissement', models.BooleanField(default=False, verbose_name="Forc\xe9e l'encaissement")),
                ('exoneration', models.CharField(blank=True, max_length=1, null=True, verbose_name='Exon\xe9ration', choices=[('T', 'Total'), ('P', 'Partiel')])),
                ('demi_annee', models.BooleanField(default=False, verbose_name='Demi ann\xe9e')),
                ('cod_anu', models.ForeignKey(verbose_name='Code Annee Universitaire', to='django_apogee.AnneeUni')),
                ('cod_ind', models.ForeignKey(related_name='etapes_ied', db_column='COD_IND', to='django_apogee.Individu')),
            ],
            options={
                'db_table': 'INS_ADM_ETP_COPY',
                'verbose_name': 'Etape',
                'verbose_name_plural': "etapes de l'\xe9tudiant",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MentionBac',
            fields=[
                ('cod_mnb', models.CharField(max_length=2, serialize=False, verbose_name='code mention niveau bac', primary_key=True, db_column='COD_MNB')),
                ('lib_mnb', models.CharField(max_length=50, verbose_name='libelle long', db_column='LIB_MNB')),
                ('lic_mnb', models.CharField(max_length=20, verbose_name='libelle court', db_column='LIC_MNB')),
                ('tem_en_sve_mnb', models.CharField(default='O', max_length=1, verbose_name='temoin code en service', db_column='TEM_EN_SVE_MNB', choices=[('O', 'O'), ('N', 'N')])),
            ],
            options={
                'db_table': 'MENTION_NIV_BAC',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MtfNonAflSso',
            fields=[
                ('cod_mns', models.CharField(max_length=1, serialize=False, verbose_name='Code motif non affiliation securite sociale', primary_key=True, db_column='COD_MNS')),
                ('lib_mns', models.CharField(max_length=40, verbose_name='Libelle long motif non affiliation', db_column='LIB_MNS')),
                ('lic_mns', models.CharField(max_length=10, verbose_name='Libelle court motif non affiliation', db_column='LIC_MNS')),
                ('tem_en_sve_mns', models.CharField(default='O', max_length=1, verbose_name='Temoin code en service', db_column='TEM_EN_SVE_MNS', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_del', models.CharField(default='O', max_length=1, verbose_name="Temoin d'autorisation de mise hors service", db_column='TEM_DEL', choices=[('O', 'O'), ('N', 'N')])),
            ],
            options={
                'db_table': 'MTF_NON_AFL_SSO',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('cod_pay', models.CharField(max_length=3, serialize=False, primary_key=True, db_column='COD_PAY')),
                ('cod_sis_pay', models.CharField(max_length=3, db_column='COD_SIS_PAY')),
                ('lib_pay', models.CharField(max_length=50, db_column='LIB_PAY')),
                ('lic_pay', models.CharField(max_length=20, db_column='LIC_PAY')),
                ('lib_nat', models.CharField(max_length=50, db_column='LIB_NAT')),
                ('tem_ouv_drt_sso_pay', models.CharField(max_length=1, db_column='TEM_OUV_DRT_SSO_PAY')),
                ('tem_en_sve_pay', models.CharField(max_length=1, db_column='TEM_EN_SVE_PAY')),
                ('tem_del', models.CharField(max_length=1, db_column='TEM_DEL')),
                ('tem_afl_dec_ind_pay', models.CharField(max_length=1, db_column='TEM_AFL_DEC_IND_PAY')),
            ],
            options={
                'ordering': ['lic_pay'],
                'db_table': 'PAYS',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='QuotiteTra',
            fields=[
                ('cod_qtr', models.CharField(max_length=1, serialize=False, verbose_name='code', primary_key=True, db_column='COD_QTR')),
                ('lib_qtr', models.CharField(max_length=50, verbose_name='libelle long', db_column='LIB_QTR')),
                ('lic_qtr', models.CharField(max_length=50, verbose_name='libelle court', db_column='LIC_QTR')),
                ('lim1_qtr', models.CharField(max_length=50, verbose_name='libelle court', db_column='LIM1_QTR')),
                ('lib_web_qtr', models.CharField(max_length=120, verbose_name='libelle court', db_column='LIB_WEB_QTR')),
                ('tem_en_sve_qtr', models.CharField(default='O', max_length=1, verbose_name='temoin en service', db_column='TEM_EN_SVE_QTR', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_cou_aut_reg_qtr', models.CharField(default='O', max_length=1, verbose_name='couverture s\xe9cu', db_column='TEM_COU_AUT_REG_QTR', choices=[('O', 'O'), ('N', 'N')])),
            ],
            options={
                'db_table': 'QUOTITE_TRA',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RegimeParent',
            fields=[
                ('cod_rgp', models.CharField(max_length=2, serialize=False, verbose_name='code r\xe9gime des parents', primary_key=True, db_column='COD_RGP')),
                ('lib_rgp', models.CharField(max_length=280, verbose_name='Libell\xe9 r\xe9gime des parents', db_column='LIB_RGP')),
                ('ordre_tri_rgp', models.CharField(max_length=2, null=True, verbose_name="Ordre de  de tri d'affichage", db_column='ORDRE_TRI_RGP')),
            ],
            options={
                'db_table': 'REGIME_PARENT',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SitFam',
            fields=[
                ('cod_fam', models.CharField(max_length=1, serialize=False, primary_key=True, db_column='COD_FAM')),
                ('cod_sis_fam', models.CharField(max_length=1, null=True, db_column='COD_SIS_FAM', blank=True)),
                ('lib_fam', models.CharField(max_length=40, db_column='LIB_FAM')),
                ('lic_fam', models.CharField(max_length=10, db_column='LIC_FAM')),
                ('tem_en_sve_fam', models.CharField(default='O', max_length=1, db_column='TEM_EN_SVE_FAM', choices=[('O', 'O'), ('N', 'N')])),
            ],
            options={
                'db_table': 'SIT_FAM',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SitMil',
            fields=[
                ('cod_sim', models.CharField(max_length=1, serialize=False, verbose_name='Code Situation militaire', primary_key=True, db_column='COD_SIM')),
                ('lib_sim', models.CharField(max_length=50, verbose_name='Libelle Long Situation Militaire', db_column='LIB_SIM')),
                ('lic_sim', models.CharField(max_length=20, verbose_name='lib court', db_column='LIC_SIM')),
                ('tem_sai_dmm_lbt', models.CharField(default='O', max_length=1, verbose_name='temoin permettant une saisie coherente code situation militaire', db_column='TEM_SAI_DMM_LBT', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_en_sve_sim', models.CharField(default='O', max_length=1, verbose_name='temoin en service', db_column='TEM_EN_SVE_SIM', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_del_dip', models.CharField(default='N', max_length=1, verbose_name='Temoin de d\xe9livrance du diplome', db_column='TEM_DEL_DIP', choices=[('O', 'O'), ('N', 'N')])),
            ],
            options={
                'db_table': 'SIT_MIL',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SitSociale',
            fields=[
                ('cod_soc', models.CharField(max_length=2, serialize=False, verbose_name='code situation sociale', primary_key=True, db_column='COD_SOC')),
                ('lib_soc', models.CharField(max_length=35, verbose_name='libelle long', db_column='LIM1_SOC')),
                ('lic_soc', models.CharField(max_length=35, verbose_name='libelle court', db_column='LIB_SOC')),
                ('tem_en_sve_soc', models.CharField(max_length=1, verbose_name='Temoin code en service', db_column='TEM_EN_SVE_SOC', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_del', models.CharField(max_length=1, verbose_name="T\xe9moin d'autorisation de mise hors service", db_column='TEM_DEL', choices=[('O', 'O'), ('N', 'N')])),
            ],
            options={
                'db_table': 'SIT_SOCIALE',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SituationSise',
            fields=[
                ('cod_sis', models.CharField(max_length=1, serialize=False, verbose_name='code', primary_key=True, db_column='COD_SIS')),
                ('lib_sis', models.CharField(max_length=130, verbose_name='libelle long', db_column='LIB_SIS')),
                ('tem_en_sve_sis', models.CharField(default='O', max_length=1, verbose_name='temoin en service', db_column='TEM_EN_SVE_SIS', choices=[('O', 'O'), ('N', 'N')])),
            ],
            options={
                'db_table': 'SITUATION_SISE',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SpecialiteVdi',
            fields=[
                ('cod_svd', models.CharField(max_length=6, serialize=False, primary_key=True, db_column='COD_SVD')),
                ('lib_svd', models.CharField(max_length=400, db_column='LIB_SVD')),
                ('tem_en_sve_svd', models.CharField(max_length=1, verbose_name='', db_column='TEM_EN_SVE_SVD')),
            ],
            options={
                'db_table': 'SPECIALITE_VDI',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TypeDiplomeExt',
            fields=[
                ('cod_tde', models.CharField(max_length=3, serialize=False, verbose_name='code', primary_key=True, db_column='COD_TDE')),
                ('lib_web_tde', models.CharField(max_length=130, verbose_name='libelle long', db_column='LIB_WEB_TDE')),
                ('lib_tde', models.CharField(max_length=130, verbose_name='libelle long', db_column='LIB_TDE')),
                ('tem_en_sve_tde', models.CharField(default='O', max_length=1, verbose_name='temoin en service', db_column='TEM_EN_SVE_TDE', choices=[('O', 'O'), ('N', 'N')])),
            ],
            options={
                'db_table': 'TYP_DIPLOME_EXT',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TypEtb',
            fields=[
                ('cod_tpe', models.CharField(max_length=2, serialize=False, verbose_name='code type etablissement', primary_key=True, db_column='COD_TPE')),
                ('cod_sis_tpe', models.CharField(max_length=2, null=True, verbose_name='Correspondance Code SISE type \xe9tablissement', db_column='COD_SIS_TPE')),
                ('lib_tpe', models.CharField(max_length=50, verbose_name='libelle long', db_column='LIB_TPE')),
                ('lic_tpe', models.CharField(max_length=20, verbose_name='libelle court', db_column='LIC_TPE')),
                ('tem_det_tpe', models.CharField(default='O', max_length=1, verbose_name="temoin detail possibl sur ce type d'etablissement", db_column='TEM_DET_TPE', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_en_sve_tpe', models.CharField(default='O', max_length=1, verbose_name='temoin code en service', db_column='TEM_EN_SVE_TPE', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_ges_trf_tpe', models.CharField(default='O', max_length=1, verbose_name='temoin gestion des transfert', db_column='TEM_GES_TRF_TPE', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_prop_autre_etb', models.CharField(default='N', max_length=1, verbose_name='temoin etablissement en cours', db_column='TEM_PROP_AUTRE_ETB', choices=[('O', 'O'), ('N', 'N')])),
            ],
            options={
                'db_table': 'TYP_ETB',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TypHandicap',
            fields=[
                ('cod_thp', models.CharField(max_length=2, serialize=False, verbose_name='code type handicap', primary_key=True, db_column='COD_THP')),
                ('lib_thp', models.CharField(max_length=50, verbose_name='libelle long', db_column='LIB_THP')),
                ('lic_thp', models.CharField(max_length=20, verbose_name='lielle court', db_column='LIC_THP')),
                ('tem_tie_tps', models.CharField(default='O', max_length=1, verbose_name='temoin handicap permet tiers temps', db_column='TEM_TIE_TPS', choices=[('O', 'O'), ('N', 'N')])),
                ('tem_en_sve_thp', models.CharField(default='O', max_length=1, verbose_name='temoin en service', db_column='TEM_EN_SVE_THP', choices=[('O', 'O'), ('N', 'N')])),
            ],
            options={
                'db_table': 'TYP_HANDICAP',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TypHebergement',
            fields=[
                ('cod_thb', models.CharField(max_length=1, serialize=False, verbose_name='code type h\xe9bergement', primary_key=True, db_column='COD_THB')),
                ('lib_thb', models.CharField(max_length=60, verbose_name='libelle long type h\xe9bergement', db_column='LIB_THB')),
                ('tem_en_sve_thb', models.CharField(default='O', max_length=1, verbose_name='temoin en service', db_column='TEM_EN_SVE_THB', choices=[('O', 'O'), ('N', 'N')])),
            ],
            options={
                'db_table': 'TYP_HEBERGEMENT',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VdiFractionnerVet',
            fields=[
                ('id', models.CharField(max_length=22, serialize=False, verbose_name='id', primary_key=True)),
                ('cod_etp', models.CharField(max_length=6, verbose_name='code etape', db_column='COD_ETP')),
                ('cod_vrs_vet', models.CharField(max_length=3, verbose_name='version etape', db_column='COD_VRS_VET')),
                ('cod_dip', models.CharField(max_length=7, verbose_name='code diplome', db_column='COD_DIP')),
                ('cod_vrs_vdi', models.CharField(max_length=3, verbose_name='version diplome', db_column='COD_VRS_VDI')),
                ('cod_sis_daa_min', models.CharField(max_length=2, null=True, verbose_name="Equivalent Annee Minimale de l'Etape pour un Diplome", db_column='COD_SIS_DAA_MIN')),
            ],
            options={
                'db_table': 'VDI_FRACTIONNER_VET_COPY',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VersionDiplome',
            fields=[
                ('id', models.CharField(max_length=11, serialize=False, verbose_name='id', primary_key=True)),
                ('cod_vrs_vdi', models.CharField(max_length=3, verbose_name='version diplome', db_column='COD_VRS_VDI')),
                ('lic_vdi', models.CharField(max_length=25, null=True, verbose_name='libelle', db_column='LIC_VDI')),
                ('cod_dip', models.ForeignKey(db_column='COD_DIP', verbose_name='code diplome', to='django_apogee.Diplome', max_length=7)),
                ('cod_svd', models.ForeignKey(db_column='COD_SVD', to='django_apogee.SpecialiteVdi', null=True)),
            ],
            options={
                'db_table': 'VERSION_DIPLOME_COPY',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VersionEtape',
            fields=[
                ('id', models.CharField(max_length=10, serialize=False, verbose_name='id', primary_key=True)),
                ('cod_etp', models.CharField(max_length=6, verbose_name='code etape', db_column='COD_ETP')),
                ('cod_vrs_vet', models.CharField(max_length=3, verbose_name='version etape', db_column='COD_VRS_VET')),
            ],
            options={
                'db_table': 'VERSION_ETAPE_COPY',
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='etablissement',
            name='cod_pay_adr_etb',
            field=models.ForeignKey(db_column='COD_PAY_ADR_ETB', to='django_apogee.Pays', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='etablissement',
            name='cod_tpe',
            field=models.ForeignKey(to='django_apogee.TypEtb', db_column='COD_TPE'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='elplibelle',
            name='cod_elp',
            field=models.ForeignKey(to='django_apogee.Elp', db_column='COD_ELP'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='elp',
            name='cod_cmp',
            field=models.ForeignKey(related_name='centre_gestion_elp', db_column='COD_CMP', verbose_name='code centre gestion', to='django_apogee.Composante'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='cmphabilitervdi',
            name='cod_cmp',
            field=models.ForeignKey(to='django_apogee.Composante', db_column='COD_CMP'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='cmphabilitervdi',
            name='cod_dip',
            field=models.ForeignKey(to='django_apogee.Diplome', db_column='COD_DIP'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bourse',
            name='cod_soc',
            field=models.ForeignKey(db_column='COD_SOC', to='django_apogee.SitSociale', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bacouxequ',
            name='cod_sis',
            field=models.ForeignKey(db_column='COD_SIS', to='django_apogee.SituationSise', max_length=1, null=True, verbose_name="Code de la situation de l'annee precedente unique"),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='adresse',
            name='cod_ind',
            field=models.ForeignKey(related_name='adresse_fixe', db_column='COD_IND', to='django_apogee.Individu', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='adresse',
            name='cod_ind_ina',
            field=models.ForeignKey(related_name='adresse_annuelle', db_column='COD_IND_INA', verbose_name='Code individu pour adresse annuelle', to='django_apogee.Individu', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='adresse',
            name='cod_pay',
            field=models.ForeignKey(db_column='COD_PAY', verbose_name='Code Pays INSEE', to='django_apogee.Pays', null=True),
            preserve_default=True,
        ),
    ]
